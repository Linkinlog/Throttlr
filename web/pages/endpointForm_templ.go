// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.663
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"fmt"
	"github.com/linkinlog/throttlr/internal/models"
	"github.com/linkinlog/throttlr/web/shared"
)

func NewEndpointForm() endpointForm {
	return endpointForm{}
}

type endpointForm struct{}

func (e endpointForm) Props() shared.PageProps {
	return shared.PageProps{
		Title: "EndpointForm",
	}
}

func (e endpointForm) View() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div hx-ext=\"response-targets\"><form hx-boost=\"true\" hx-target-error=\"#errors\" hx-target=\"#response-p\" hx-post=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("/v1/register?key=%s", models.UserFromCtx(ctx).ApiKey.String()))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/pages/endpointForm.templ`, Line: 23, Col: 159}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" action=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 templ.SafeURL = templ.URL(fmt.Sprintf("/v1/register?key=%s", models.UserFromCtx(ctx).ApiKey.String()))
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var3)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" method=\"POST\" class=\"mt-4\"><div class=\"flex flex-col\"><label for=\"originalUrl\" class=\"text-secondary\">Original URL</label> <input type=\"text\" name=\"endpoint\" id=\"endpoint\" class=\"border-2 border-primary rounded-lg p-2\"></div><div class=\"flex flex-col mt-4\"><label for=\"interval\" class=\"text-secondary\">Interval</label> <select name=\"interval\" id=\"interval\" class=\"border-2 border-primary rounded-lg p-2\"><option value=\"1\">Minute</option> <option value=\"2\">Hour</option> <option value=\"3\">Day</option> <option value=\"4\">Week</option> <option value=\"5\">Month</option></select></div><div class=\"flex flex-col mt-4\"><label for=\"max\" class=\"text-secondary\">Max Requests Per Interval</label> <input type=\"number\" name=\"max\" id=\"max\" class=\"border-2 border-primary rounded-lg p-2\"></div><button type=\"submit\" class=\"bg-primary text-dark rounded-lg w-full h-12 text-2xl mt-4\">Register Endpoint</button></form><p id=\"response-p\" class=\"w-full text-center text-secondary p-2 mb-4 rounded no-underline\"></p><p id=\"errors\" class=\"w-full text-center text-red-500 p-2 mb-4 rounded no-underline\"></p></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
