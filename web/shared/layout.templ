package shared

import "github.com/linkinlog/throttlr/web/partials"

type PageProps struct {
	Title       string
	Description string
}

type Viewer interface {
	Props() PageProps
	View() templ.Component
}

func NewLayout(viewer Viewer, err string) *Layout {
	url := "https://throttlr.dahlton.org"
	img := "https://throttlr.dahlton.org/assets/logo.webp"

	title := "Welcome"
	if viewer.Props().Title != "" {
		title = viewer.Props().Title
	}

	description := "Throttlr is a simple, easy to use, global rate limiter. Simplify your API usages."
	if viewer.Props().Description != "" {
		description = viewer.Props().Description
	}

	return &Layout{
		title:       "Throttlr | " + title,
		err:         err,
		description: description,
		img:         img,
		url:         url,
		content:     viewer.View(),
	}
}

type Layout struct {
	title       string
	description string
	img         string
	url         string
	err         string
	content     templ.Component
}

func (l *Layout) SetTitle(title string) *Layout {
	l.title = title
	return l
}

func (l *Layout) SetDescription(description string) *Layout {
	l.description = description
	return l
}

func (l *Layout) SetImg(img string) *Layout {
	l.img = img
	return l
}

func (l *Layout) SetURL(url string) *Layout {
	l.url = url
	return l
}

func (l *Layout) Props() PageProps {
	return PageProps{
		Title:       l.title,
		Description: l.description,
	}
}

templ (l Layout) View() {
	<!DOCTYPE html>
	<html lang="en" itemscope="" itemtype="http://schema.org/Webpage">
		@l.head()
		<body class="min-h-screen bg-dark mx-5 mt-2 mb-4 flex flex-col">
			@partials.BetaBanner()
			@partials.Navbar()
			if l.err != "" {
				@partials.Error(l.err)
			}
			<main class="sm:mx-[10vw] lg:mx-[25vw]">
				@l.content
			</main>
		</body>
	</html>
}

templ (l Layout) head() {
	<head>
		<meta charset="utf-8"/>
		<meta name="color-scheme" content="dark"/>
		<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
		<meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0, user-scalable=no, maximum-scale=1.0, minimal-ui"/>
		<title>{ l.title }</title>
		<link rel="icon" type="image/png" href="/assets/logo.svg"/>
		<meta name="description" content={ l.description }/>
		@ga()
		<script src="https://unpkg.com/htmx.org@1.9.11" integrity="sha384-0gxUXCCR8yv9FM2b+U3FDbsKthCI66oH5IA9fHppQq9DDMHuMauqq1ZHBpJxQ0J0" crossorigin="anonymous"></script>
		<!-- Schema.org (For Google+) -->
		<meta itemprop="name" content={ l.title }/>
		<meta itemprop="description" content={ l.description }/>
		<meta itemprop="image" content={ l.img }/>
		<!-- Twitter Card markup-->
		<meta name="twitter:card" content="summary"/>
		<meta name="twitter:creator" content="@linkinlog"/>
		<meta name="twitter:url" content={ l.url }/>
		<meta name="twitter:title" content={ l.title }/>
		<meta name="twitter:description" content={ l.description }/>
		<meta name="twitter:site" content="@linkinlog"/>
		<!-- The image must be a minimum size of 120px by 120px and must be less than 1MB in file size. The image will be cropped to a square on all platforms.  -->
		<meta name="twitter:image" content={ l.img }/>
		<meta name="twitter:image:alt" content={ l.description }/>
		<!-- Open Graph markup (Facebook) -->
		<meta property="og:url" content={ l.url }/>
		<meta property="og:type" content="website"/>
		<meta property="og:title" content={ l.title }/>
		<meta property="og:description" content={ l.description }/>
		<meta property="og:image" content={ l.img }/>
		<meta property="og:locale" content="en_US"/>
		<meta property="og:site_name" content="Throttlr"/>
		<!-- Fonts -->
		<link rel="preconnect" href="https://fonts.googleapis.com"/>
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
		<link href="https://fonts.googleapis.com/css2?family=Outfit:wght@100..900&display=swap" rel="stylesheet"/>
		<!-- Styles -->
		<link rel="stylesheet" href="/assets/app.css"/>
	</head>
}

templ ga() {
	<!-- Google tag (gtag.js) -->
	<script async src="https://www.googletagmanager.com/gtag/js?id=G-4MFGB0YFV9"></script>
	<script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-4MFGB0YFV9');
    </script>
}
