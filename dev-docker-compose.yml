services:
  client:
    container_name: client
    build:
      context: .
      dockerfile: build/Dockerfile.client
    restart: always
    ports:
      - "8090:8080"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
    networks:
      - throttlr
  server:
    container_name: server
    build:
      context: .
      dockerfile: build/Dockerfile.server
    restart: always
    ports:
      - "8091:8081"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
    networks:
      - throttlr
  db:
    container_name: db
    image: postgres
    restart: always
    shm_size: 128mb
    user: postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: throttlr
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./build:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 5s
      retries: 10
    networks:
      - throttlr
volumes:
  db-data:
networks:
  throttlr:
    driver: bridge
